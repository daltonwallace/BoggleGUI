// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BoggleClientTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OnePlayerConnect - Use 'OnePlayerConnectParams' to pass parameters into this method.
        /// </summary>
        public void OnePlayerConnect()
        {
            #region Variable Declarations
            WinListItem uIBoggleClientShortcutListItem = this.UIProgramManagerWindow.UIDesktopList.UIBoggleClientShortcutListItem;
            WinEdit uIIpBoxEdit = this.UIBoggleViewWindow.UIIpBoxWindow.UIIpBoxEdit;
            WinEdit uINameBoxEdit = this.UIBoggleViewWindow.UINameBoxWindow.UINameBoxEdit;
            WinButton uIStartButton = this.UIBoggleViewWindow.UIStartWindow.UIStartButton;
            WinEdit uIWordBoxEdit = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit;
            WinButton uIEnterButton = this.UIBoggleViewWindow.UIEnterWindow.UIEnterButton;
            WinButton uIExitButton = this.UIBoggleViewWindow.UIExitWindow.UIExitButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinButton uICloseButton = this.UIBoggleViewWindow.UIBoggleViewTitleBar.UICloseButton;
            #endregion

            // Move 'BoggleClient - Shortcut' list item
            Mouse.StartDragging(uIBoggleClientShortcutListItem, new Point(51, 24));
            Mouse.StopDragging(uIBoggleClientShortcutListItem, 5, 16);

            // Type 'localhost' in 'ipBox' text box
            uIIpBoxEdit.Text = this.OnePlayerConnectParams.UIIpBoxEditText;

            // Type 'dalton' in 'nameBox' text box
            uINameBoxEdit.Text = this.OnePlayerConnectParams.UINameBoxEditText;

            // Click 'Start' button
            Mouse.Click(uIStartButton, new Point(35, 10));

            // Type 'word' in 'wordBox' text box
            uIWordBoxEdit.Text = this.OnePlayerConnectParams.UIWordBoxEditText;

            // Click 'Enter' button
            Mouse.Click(uIEnterButton, new Point(85, 17));

            // Click 'wordBox' text box
            Mouse.Click(uIWordBoxEdit, new Point(123, 14));

            // Click 'Exit' button
            Mouse.Click(uIExitButton, new Point(44, 18));

            // Click 'Start' button
            Mouse.Click(uIStartButton, new Point(47, 17));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(17, 12));

            // Click 'Exit' button
            Mouse.Click(uIExitButton, new Point(41, 17));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(15, 14));
        }
        
        /// <summary>
        /// Testing of player joining the boggle server.
        /// </summary>
        public void PlayerEnqueuedAndDequeued()
        {
            #region Variable Declarations
            WinEdit uIIpBoxEdit = this.UIBoggleViewWindow.UIIpBoxWindow.UIIpBoxEdit;
            WinEdit uINameBoxEdit = this.UIBoggleViewWindow.UINameBoxWindow.UINameBoxEdit;
            WinButton uIStartButton = this.UIBoggleViewWindow.UIStartWindow.UIStartButton;
            WinButton uIExitButton = this.UIBoggleViewWindow.UIExitWindow.UIExitButton;
            WinEdit uIWordBoxEdit = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit;
            WinButton uIEnterButton = this.UIBoggleViewWindow.UIEnterWindow.UIEnterButton;
            WinClient uITableLayoutPanel1Client = this.UIBoggleViewWindow.UITableLayoutPanel1Window.UITableLayoutPanel1Client;
            WinEdit uITimeBoxEdit = this.UIBoggleViewWindow.UITimeBoxWindow.UITimeBoxEdit;
            WinEdit uIOpponentScoreBoxEdit = this.UIBoggleViewWindow.UIOpponentScoreBoxWindow.UIOpponentScoreBoxEdit;
            #endregion

            // Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
            ApplicationUnderTest uIBoggleViewWindow = ApplicationUnderTest.Launch(this.PlayerEnqueuedAndDequeuedParams.UIBoggleViewWindowExePath, this.PlayerEnqueuedAndDequeuedParams.UIBoggleViewWindowAlternateExePath);

            // Type 'localhost' in 'ipBox' text box
            uIIpBoxEdit.Text = this.PlayerEnqueuedAndDequeuedParams.UIIpBoxEditText;

            // Type '{Tab}' in 'ipBox' text box
            Keyboard.SendKeys(uIIpBoxEdit, this.PlayerEnqueuedAndDequeuedParams.UIIpBoxEditSendKeys, ModifierKeys.None);

            // Type 'Brandon' in 'nameBox' text box
            uINameBoxEdit.Text = this.PlayerEnqueuedAndDequeuedParams.UINameBoxEditText;

            // Click 'Start' button
            Mouse.Click(uIStartButton, new Point(41, 14));

            // Click 'Exit' button
            Mouse.Click(uIExitButton, new Point(29, 15));

            // Click 'Start' button
            Mouse.Click(uIStartButton, new Point(38, 10));

            // Type 'joe' in 'wordBox' text box
            uIWordBoxEdit.Text = this.PlayerEnqueuedAndDequeuedParams.UIWordBoxEditText;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit, this.PlayerEnqueuedAndDequeuedParams.UIWordBoxEditSendKeys, ModifierKeys.None);

            // Click 'Enter' button
            Mouse.Click(uIEnterButton, new Point(36, 13));

            // Click 'tableLayoutPanel1' client
            Mouse.Click(uITableLayoutPanel1Client, new Point(133, 257));

            // Click 'timeBox' text box
            Mouse.Click(uITimeBoxEdit, new Point(44, 7));

            // Click 'opponentScoreBox' text box
            Mouse.Click(uIOpponentScoreBoxEdit, new Point(37, 13));

            // Click 'tableLayoutPanel1' client
            Mouse.Click(uITableLayoutPanel1Client, new Point(146, 134));

            // Click 'Exit' button
            Mouse.Click(uIExitButton, new Point(40, 3));
        }
        
        /// <summary>
        /// Closed the boggle board
        /// </summary>
        public void ClosingBoard()
        {
            #region Variable Declarations
            WinButton uIExitButton = this.UIBoggleViewWindow.UIExitWindow.UIExitButton;
            WinButton uICloseButton = this.UIBoggleViewWindow.UIBoggleViewTitleBar.UICloseButton;
            #endregion

            // Click 'Exit' button
            Mouse.Click(uIExitButton, new Point(33, 13));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(31, 10));
        }
        
        /// <summary>
        /// PlayerGame - Use 'PlayerGameParams' to pass parameters into this method.
        /// </summary>
        public void PlayerGame()
        {
            #region Variable Declarations
            WinEdit uIIpBoxEdit = this.UIBoggleViewWindow.UIIpBoxWindow.UIIpBoxEdit;
            WinEdit uINameBoxEdit = this.UIBoggleViewWindow.UINameBoxWindow.UINameBoxEdit;
            WinEdit uIWordBoxEdit = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit;
            WinButton uIStartButton = this.UIBoggleViewWindow.UIStartWindow.UIStartButton;
            WinEdit uIWordBoxEdit1 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit1;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
            ApplicationUnderTest uIBoggleViewWindow = ApplicationUnderTest.Launch(this.PlayerGameParams.UIBoggleViewWindowExePath, this.PlayerGameParams.UIBoggleViewWindowAlternateExePath);

            // Type 'localhost' in 'ipBox' text box
            uIIpBoxEdit.Text = this.PlayerGameParams.UIIpBoxEditText;

            // Type '{Tab}' in 'ipBox' text box
            Keyboard.SendKeys(uIIpBoxEdit, this.PlayerGameParams.UIIpBoxEditSendKeys, ModifierKeys.None);

            // Type 'Dalton' in 'nameBox' text box
            uINameBoxEdit.Text = this.PlayerGameParams.UINameBoxEditText;

            // Click 'wordBox' text box
            Mouse.Click(uIWordBoxEdit, new Point(22, 3));

            // Click 'Start' button
            Mouse.Click(uIStartButton, new Point(24, 11));

            // Type 'eat' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys, ModifierKeys.None);

            // Type 'ate' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text1;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys1, ModifierKeys.None);

            // Type 'hate' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text2;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys2, ModifierKeys.None);

            // Type 'had' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text3;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys3, ModifierKeys.None);

            // Type 'hard' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text4;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys4, ModifierKeys.None);

            // Type 'hare' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text5;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys5, ModifierKeys.None);

            // Type 'adsf' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text6;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys6, ModifierKeys.None);

            // Type 'falke' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text7;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys7, ModifierKeys.None);

            // Type 'hate' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text8;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys8, ModifierKeys.None);

            // Type 'had' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text9;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys9, ModifierKeys.None);

            // Type 'dad' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text10;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys10, ModifierKeys.None);

            // Type 'date' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text11;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys11, ModifierKeys.None);

            // Type 'dates' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text12;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys12, ModifierKeys.None);

            // Type 'meh' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text13;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys13, ModifierKeys.None);

            // Type 'rad' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text14;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys14, ModifierKeys.None);

            // Type 'rade' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text15;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys15, ModifierKeys.None);

            // Type 'rate' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text16;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys16, ModifierKeys.None);

            // Type 'tear' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text17;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys17, ModifierKeys.None);

            // Type 'tead' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text18;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys18, ModifierKeys.None);

            // Type 'read' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text19;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys19, ModifierKeys.None);

            // Type 'head' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text20;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys20, ModifierKeys.None);

            // Type 'hard' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text21;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys21, ModifierKeys.None);

            // Type 'hate' in 'wordBox' text box
            uIWordBoxEdit1.Text = this.PlayerGameParams.UIWordBoxEdit1Text22;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit1, this.PlayerGameParams.UIWordBoxEdit1SendKeys22, ModifierKeys.None);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(61, 13));
        }
        
        /// <summary>
        /// CloseGame
        /// </summary>
        public void CloseGame()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIBoggleViewWindow.UIBoggleViewTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 8));
        }
        
        /// <summary>
        /// Added client, added words, exited game prematurely.
        /// </summary>
        public void SampleGame()
        {
            #region Variable Declarations
            WinEdit uIIpBoxEdit = this.UIBoggleViewWindow.UIIpBoxWindow.UIIpBoxEdit;
            WinEdit uINameBoxEdit = this.UIBoggleViewWindow.UINameBoxWindow.UINameBoxEdit;
            WinButton uIStartButton = this.UIBoggleViewWindow.UIStartWindow.UIStartButton;
            WinEdit uIWordBoxEdit2 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit2;
            WinEdit uIWordBoxEdit3 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit3;
            WinEdit uIWordBoxEdit4 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit4;
            WinEdit uIWordBoxEdit5 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit5;
            WinEdit uIWordBoxEdit6 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit6;
            WinEdit uIWordBoxEdit7 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit7;
            WinEdit uIWordBoxEdit8 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit8;
            WinEdit uIWordBoxEdit9 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit9;
            WinEdit uIWordBoxEdit10 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit10;
            WinEdit uIWordBoxEdit11 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit11;
            WinEdit uIWordBoxEdit12 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit12;
            WinEdit uIWordBoxEdit13 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit13;
            WinEdit uIWordBoxEdit14 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit14;
            WinEdit uIWordBoxEdit15 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit15;
            WinEdit uIWordBoxEdit16 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit16;
            WinEdit uIWordBoxEdit17 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit17;
            WinEdit uIWordBoxEdit18 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit18;
            WinEdit uIWordBoxEdit19 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit19;
            WinEdit uIWordBoxEdit20 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit20;
            WinEdit uIWordBoxEdit21 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit21;
            WinEdit uIWordBoxEdit22 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit22;
            WinEdit uIWordBoxEdit23 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit23;
            WinButton uIExitButton = this.UIBoggleViewWindow.UIExitWindow.UIExitButton;
            WinEdit uIWordBoxEdit24 = this.UIBoggleViewWindow.UIWordBoxWindow.UIWordBoxEdit24;
            WinTitleBar uITelnetlocalhostTitleBar = this.UITelnetlocalhostWindow.UITelnetlocalhostTitleBar;
            WinClient uITelnetlocalhostClient = this.UITelnetlocalhostWindow.UITelnetlocalhostClient;
            WinTitleBar uIBoggleViewTitleBar = this.UIBoggleViewWindow.UIBoggleViewTitleBar;
            #endregion

            // Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
            ApplicationUnderTest uIBoggleViewWindow = ApplicationUnderTest.Launch(this.SampleGameParams.UIBoggleViewWindowExePath, this.SampleGameParams.UIBoggleViewWindowAlternateExePath);

            // Type 'localhost' in 'ipBox' text box
            uIIpBoxEdit.Text = this.SampleGameParams.UIIpBoxEditText;

            // Type '{Tab}' in 'ipBox' text box
            Keyboard.SendKeys(uIIpBoxEdit, this.SampleGameParams.UIIpBoxEditSendKeys, ModifierKeys.None);

            // Type 'Skywalker' in 'nameBox' text box
            uINameBoxEdit.Text = this.SampleGameParams.UINameBoxEditText;

            // Click 'Start' button
            Mouse.Click(uIStartButton, new Point(55, 12));

            // Type 'tom' in 'wordBox' text box
            uIWordBoxEdit2.Text = this.SampleGameParams.UIWordBoxEdit2Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit3, this.SampleGameParams.UIWordBoxEdit3SendKeys, ModifierKeys.None);

            // Type 'toe' in 'wordBox' text box
            uIWordBoxEdit4.Text = this.SampleGameParams.UIWordBoxEdit4Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit5, this.SampleGameParams.UIWordBoxEdit5SendKeys, ModifierKeys.None);

            // Type 'log' in 'wordBox' text box
            uIWordBoxEdit6.Text = this.SampleGameParams.UIWordBoxEdit6Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit7, this.SampleGameParams.UIWordBoxEdit7SendKeys, ModifierKeys.None);

            // Type 'tale' in 'wordBox' text box
            uIWordBoxEdit8.Text = this.SampleGameParams.UIWordBoxEdit8Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit9, this.SampleGameParams.UIWordBoxEdit9SendKeys, ModifierKeys.None);

            // Type 'lot' in 'wordBox' text box
            uIWordBoxEdit10.Text = this.SampleGameParams.UIWordBoxEdit10Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit11, this.SampleGameParams.UIWordBoxEdit11SendKeys, ModifierKeys.None);

            // Type 'yet' in 'wordBox' text box
            uIWordBoxEdit12.Text = this.SampleGameParams.UIWordBoxEdit12Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit13, this.SampleGameParams.UIWordBoxEdit13SendKeys, ModifierKeys.None);

            // Type 'got' in 'wordBox' text box
            uIWordBoxEdit14.Text = this.SampleGameParams.UIWordBoxEdit14Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit15, this.SampleGameParams.UIWordBoxEdit15SendKeys, ModifierKeys.None);

            // Type 'mot' in 'wordBox' text box
            uIWordBoxEdit16.Text = this.SampleGameParams.UIWordBoxEdit16Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit17, this.SampleGameParams.UIWordBoxEdit17SendKeys, ModifierKeys.None);

            // Type 'tom' in 'wordBox' text box
            uIWordBoxEdit18.Text = this.SampleGameParams.UIWordBoxEdit18Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit19, this.SampleGameParams.UIWordBoxEdit19SendKeys, ModifierKeys.None);

            // Type 'toaz' in 'wordBox' text box
            uIWordBoxEdit20.Text = this.SampleGameParams.UIWordBoxEdit20Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit21, this.SampleGameParams.UIWordBoxEdit21SendKeys, ModifierKeys.None);

            // Type 'code' in 'wordBox' text box
            uIWordBoxEdit22.Text = this.SampleGameParams.UIWordBoxEdit22Text;

            // Type '{Enter}' in 'wordBox' text box
            Keyboard.SendKeys(uIWordBoxEdit23, this.SampleGameParams.UIWordBoxEdit23SendKeys, ModifierKeys.None);

            // Click 'Exit' button
            Mouse.Click(uIExitButton, new Point(33, 15));

            // Click 'wordBox' text box
            Mouse.Click(uIWordBoxEdit24, new Point(84, 7));

            // Click 'Start' button
            Mouse.Click(uIStartButton, new Point(46, 10));

            // Click 'Telnet localhost' title bar
            Mouse.Click(uITelnetlocalhostTitleBar, new Point(361, 10));

            // Type '{Enter}' in 'Telnet localhost' client
            Keyboard.SendKeys(uITelnetlocalhostClient, this.SampleGameParams.UITelnetlocalhostClientSendKeys, ModifierKeys.None);

            // Click 'Boggle View' title bar
            Mouse.Click(uIBoggleViewTitleBar, new Point(18, 19));
        }
        
        #region Properties
        public virtual OnePlayerConnectParams OnePlayerConnectParams
        {
            get
            {
                if ((this.mOnePlayerConnectParams == null))
                {
                    this.mOnePlayerConnectParams = new OnePlayerConnectParams();
                }
                return this.mOnePlayerConnectParams;
            }
        }
        
        public virtual PlayerEnqueuedAndDequeuedParams PlayerEnqueuedAndDequeuedParams
        {
            get
            {
                if ((this.mPlayerEnqueuedAndDequeuedParams == null))
                {
                    this.mPlayerEnqueuedAndDequeuedParams = new PlayerEnqueuedAndDequeuedParams();
                }
                return this.mPlayerEnqueuedAndDequeuedParams;
            }
        }
        
        public virtual PlayerGameParams PlayerGameParams
        {
            get
            {
                if ((this.mPlayerGameParams == null))
                {
                    this.mPlayerGameParams = new PlayerGameParams();
                }
                return this.mPlayerGameParams;
            }
        }
        
        public virtual SampleGameParams SampleGameParams
        {
            get
            {
                if ((this.mSampleGameParams == null))
                {
                    this.mSampleGameParams = new SampleGameParams();
                }
                return this.mSampleGameParams;
            }
        }
        
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UIBoggleViewWindow UIBoggleViewWindow
        {
            get
            {
                if ((this.mUIBoggleViewWindow == null))
                {
                    this.mUIBoggleViewWindow = new UIBoggleViewWindow();
                }
                return this.mUIBoggleViewWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UITelnetlocalhostWindow UITelnetlocalhostWindow
        {
            get
            {
                if ((this.mUITelnetlocalhostWindow == null))
                {
                    this.mUITelnetlocalhostWindow = new UITelnetlocalhostWindow();
                }
                return this.mUITelnetlocalhostWindow;
            }
        }
        #endregion
        
        #region Fields
        private OnePlayerConnectParams mOnePlayerConnectParams;
        
        private PlayerEnqueuedAndDequeuedParams mPlayerEnqueuedAndDequeuedParams;
        
        private PlayerGameParams mPlayerGameParams;
        
        private SampleGameParams mSampleGameParams;
        
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UIBoggleViewWindow mUIBoggleViewWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UITelnetlocalhostWindow mUITelnetlocalhostWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OnePlayerConnect'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class OnePlayerConnectParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'localhost' in 'ipBox' text box
        /// </summary>
        public string UIIpBoxEditText = "localhost";
        
        /// <summary>
        /// Type 'dalton' in 'nameBox' text box
        /// </summary>
        public string UINameBoxEditText = "dalton";
        
        /// <summary>
        /// Type 'word' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEditText = "word";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PlayerEnqueuedAndDequeued'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PlayerEnqueuedAndDequeuedParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
        /// </summary>
        public string UIBoggleViewWindowExePath = "C:\\Users\\Dalton\\Desktop\\School\\CS 3500\\Assignments\\PS9\\BoggleClient\\bin\\Debug\\Bog" +
            "gleClient.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
        /// </summary>
        public string UIBoggleViewWindowAlternateExePath = "%USERPROFILE%\\Desktop\\School\\CS 3500\\Assignments\\PS9\\BoggleClient\\bin\\Debug\\Boggl" +
            "eClient.exe";
        
        /// <summary>
        /// Type 'localhost' in 'ipBox' text box
        /// </summary>
        public string UIIpBoxEditText = "localhost";
        
        /// <summary>
        /// Type '{Tab}' in 'ipBox' text box
        /// </summary>
        public string UIIpBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Brandon' in 'nameBox' text box
        /// </summary>
        public string UINameBoxEditText = "Brandon";
        
        /// <summary>
        /// Type 'joe' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEditText = "joe";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PlayerGame'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PlayerGameParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
        /// </summary>
        public string UIBoggleViewWindowExePath = "C:\\Users\\Dalton\\Desktop\\School\\CS 3500\\Assignments\\PS9\\BoggleClient\\bin\\Debug\\Bog" +
            "gleClient.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
        /// </summary>
        public string UIBoggleViewWindowAlternateExePath = "%USERPROFILE%\\Desktop\\School\\CS 3500\\Assignments\\PS9\\BoggleClient\\bin\\Debug\\Boggl" +
            "eClient.exe";
        
        /// <summary>
        /// Type 'localhost' in 'ipBox' text box
        /// </summary>
        public string UIIpBoxEditText = "localhost";
        
        /// <summary>
        /// Type '{Tab}' in 'ipBox' text box
        /// </summary>
        public string UIIpBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Dalton' in 'nameBox' text box
        /// </summary>
        public string UINameBoxEditText = "Dalton";
        
        /// <summary>
        /// Type 'eat' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text = "eat";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'ate' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text1 = "ate";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type 'hate' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text2 = "hate";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys2 = "{Enter}";
        
        /// <summary>
        /// Type 'had' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text3 = "had";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys3 = "{Enter}";
        
        /// <summary>
        /// Type 'hard' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text4 = "hard";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys4 = "{Enter}";
        
        /// <summary>
        /// Type 'hare' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text5 = "hare";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys5 = "{Enter}";
        
        /// <summary>
        /// Type 'adsf' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text6 = "adsf";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys6 = "{Enter}";
        
        /// <summary>
        /// Type 'falke' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text7 = "falke";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys7 = "{Enter}";
        
        /// <summary>
        /// Type 'hate' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text8 = "hate";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys8 = "{Enter}";
        
        /// <summary>
        /// Type 'had' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text9 = "had";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys9 = "{Enter}";
        
        /// <summary>
        /// Type 'dad' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text10 = "dad";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys10 = "{Enter}";
        
        /// <summary>
        /// Type 'date' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text11 = "date";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys11 = "{Enter}";
        
        /// <summary>
        /// Type 'dates' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text12 = "dates";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys12 = "{Enter}";
        
        /// <summary>
        /// Type 'meh' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text13 = "meh";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys13 = "{Enter}";
        
        /// <summary>
        /// Type 'rad' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text14 = "rad";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys14 = "{Enter}";
        
        /// <summary>
        /// Type 'rade' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text15 = "rade";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys15 = "{Enter}";
        
        /// <summary>
        /// Type 'rate' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text16 = "rate";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys16 = "{Enter}";
        
        /// <summary>
        /// Type 'tear' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text17 = "tear";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys17 = "{Enter}";
        
        /// <summary>
        /// Type 'tead' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text18 = "tead";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys18 = "{Enter}";
        
        /// <summary>
        /// Type 'read' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text19 = "read";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys19 = "{Enter}";
        
        /// <summary>
        /// Type 'head' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text20 = "head";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys20 = "{Enter}";
        
        /// <summary>
        /// Type 'hard' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text21 = "hard";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys21 = "{Enter}";
        
        /// <summary>
        /// Type 'hate' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1Text22 = "hate";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit1SendKeys22 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SampleGame'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SampleGameParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
        /// </summary>
        public string UIBoggleViewWindowExePath = "C:\\Users\\Dalton\\Desktop\\School\\CS 3500\\Assignments\\PS9\\BoggleClient\\bin\\Debug\\Bog" +
            "gleClient.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\School\CS 3500\Assignments\PS9\BoggleClient\bin\Debug\BoggleClient.exe'
        /// </summary>
        public string UIBoggleViewWindowAlternateExePath = "%USERPROFILE%\\Desktop\\School\\CS 3500\\Assignments\\PS9\\BoggleClient\\bin\\Debug\\Boggl" +
            "eClient.exe";
        
        /// <summary>
        /// Type 'localhost' in 'ipBox' text box
        /// </summary>
        public string UIIpBoxEditText = "localhost";
        
        /// <summary>
        /// Type '{Tab}' in 'ipBox' text box
        /// </summary>
        public string UIIpBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Skywalker' in 'nameBox' text box
        /// </summary>
        public string UINameBoxEditText = "Skywalker";
        
        /// <summary>
        /// Type 'tom' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit2Text = "tom";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit3SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'toe' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit4Text = "toe";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit5SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'log' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit6Text = "log";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit7SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'tale' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit8Text = "tale";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit9SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'lot' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit10Text = "lot";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit11SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'yet' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit12Text = "yet";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit13SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'got' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit14Text = "got";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit15SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'mot' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit16Text = "mot";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit17SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'tom' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit18Text = "tom";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit19SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'toaz' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit20Text = "toaz";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit21SendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'code' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit22Text = "code";
        
        /// <summary>
        /// Type '{Enter}' in 'wordBox' text box
        /// </summary>
        public string UIWordBoxEdit23SendKeys = "{Enter}";
        
        /// <summary>
        /// Type '{Enter}' in 'Telnet localhost' client
        /// </summary>
        public string UITelnetlocalhostClientSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIDesktopList UIDesktopList
        {
            get
            {
                if ((this.mUIDesktopList == null))
                {
                    this.mUIDesktopList = new UIDesktopList(this);
                }
                return this.mUIDesktopList;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopList mUIDesktopList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDesktopList : WinList
    {
        
        public UIDesktopList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Desktop";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIBoggleClientShortcutListItem
        {
            get
            {
                if ((this.mUIBoggleClientShortcutListItem == null))
                {
                    this.mUIBoggleClientShortcutListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIBoggleClientShortcutListItem.SearchProperties[WinListItem.PropertyNames.Name] = "BoggleClient - Shortcut";
                    this.mUIBoggleClientShortcutListItem.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIBoggleClientShortcutListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIBoggleClientShortcutListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBoggleViewWindow : WinWindow
    {
        
        public UIBoggleViewWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Boggle View";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public UIIpBoxWindow UIIpBoxWindow
        {
            get
            {
                if ((this.mUIIpBoxWindow == null))
                {
                    this.mUIIpBoxWindow = new UIIpBoxWindow(this);
                }
                return this.mUIIpBoxWindow;
            }
        }
        
        public UINameBoxWindow UINameBoxWindow
        {
            get
            {
                if ((this.mUINameBoxWindow == null))
                {
                    this.mUINameBoxWindow = new UINameBoxWindow(this);
                }
                return this.mUINameBoxWindow;
            }
        }
        
        public UIStartWindow UIStartWindow
        {
            get
            {
                if ((this.mUIStartWindow == null))
                {
                    this.mUIStartWindow = new UIStartWindow(this);
                }
                return this.mUIStartWindow;
            }
        }
        
        public UIWordBoxWindow UIWordBoxWindow
        {
            get
            {
                if ((this.mUIWordBoxWindow == null))
                {
                    this.mUIWordBoxWindow = new UIWordBoxWindow(this);
                }
                return this.mUIWordBoxWindow;
            }
        }
        
        public UIEnterWindow UIEnterWindow
        {
            get
            {
                if ((this.mUIEnterWindow == null))
                {
                    this.mUIEnterWindow = new UIEnterWindow(this);
                }
                return this.mUIEnterWindow;
            }
        }
        
        public UIExitWindow UIExitWindow
        {
            get
            {
                if ((this.mUIExitWindow == null))
                {
                    this.mUIExitWindow = new UIExitWindow(this);
                }
                return this.mUIExitWindow;
            }
        }
        
        public UIBoggleViewTitleBar UIBoggleViewTitleBar
        {
            get
            {
                if ((this.mUIBoggleViewTitleBar == null))
                {
                    this.mUIBoggleViewTitleBar = new UIBoggleViewTitleBar(this);
                }
                return this.mUIBoggleViewTitleBar;
            }
        }
        
        public UITableLayoutPanel1Window UITableLayoutPanel1Window
        {
            get
            {
                if ((this.mUITableLayoutPanel1Window == null))
                {
                    this.mUITableLayoutPanel1Window = new UITableLayoutPanel1Window(this);
                }
                return this.mUITableLayoutPanel1Window;
            }
        }
        
        public UITimeBoxWindow UITimeBoxWindow
        {
            get
            {
                if ((this.mUITimeBoxWindow == null))
                {
                    this.mUITimeBoxWindow = new UITimeBoxWindow(this);
                }
                return this.mUITimeBoxWindow;
            }
        }
        
        public UIOpponentScoreBoxWindow UIOpponentScoreBoxWindow
        {
            get
            {
                if ((this.mUIOpponentScoreBoxWindow == null))
                {
                    this.mUIOpponentScoreBoxWindow = new UIOpponentScoreBoxWindow(this);
                }
                return this.mUIOpponentScoreBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIIpBoxWindow mUIIpBoxWindow;
        
        private UINameBoxWindow mUINameBoxWindow;
        
        private UIStartWindow mUIStartWindow;
        
        private UIWordBoxWindow mUIWordBoxWindow;
        
        private UIEnterWindow mUIEnterWindow;
        
        private UIExitWindow mUIExitWindow;
        
        private UIBoggleViewTitleBar mUIBoggleViewTitleBar;
        
        private UITableLayoutPanel1Window mUITableLayoutPanel1Window;
        
        private UITimeBoxWindow mUITimeBoxWindow;
        
        private UIOpponentScoreBoxWindow mUIOpponentScoreBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIIpBoxWindow : WinWindow
    {
        
        public UIIpBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ipBox";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinEdit UIIpBoxEdit
        {
            get
            {
                if ((this.mUIIpBoxEdit == null))
                {
                    this.mUIIpBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIIpBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUIIpBoxEdit.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIIpBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIIpBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UINameBoxWindow : WinWindow
    {
        
        public UINameBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nameBox";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameBoxEdit
        {
            get
            {
                if ((this.mUINameBoxEdit == null))
                {
                    this.mUINameBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameBoxEdit.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUINameBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIStartWindow : WinWindow
    {
        
        public UIStartWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "startButton";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinButton UIStartButton
        {
            get
            {
                if ((this.mUIStartButton == null))
                {
                    this.mUIStartButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIStartButton.SearchProperties[WinButton.PropertyNames.Name] = "Start";
                    this.mUIStartButton.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIStartButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIStartButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIWordBoxWindow : WinWindow
    {
        
        public UIWordBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "wordBox";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinEdit UIWordBoxEdit
        {
            get
            {
                if ((this.mUIWordBoxEdit == null))
                {
                    this.mUIWordBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "P";
                    this.mUIWordBoxEdit.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit;
            }
        }
        
        public WinEdit UIWordBoxEdit1
        {
            get
            {
                if ((this.mUIWordBoxEdit1 == null))
                {
                    this.mUIWordBoxEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "K";
                    this.mUIWordBoxEdit1.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit1;
            }
        }
        
        public WinEdit UIWordBoxEdit2
        {
            get
            {
                if ((this.mUIWordBoxEdit2 == null))
                {
                    this.mUIWordBoxEdit2 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit2.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit2.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit2;
            }
        }
        
        public WinEdit UIWordBoxEdit3
        {
            get
            {
                if ((this.mUIWordBoxEdit3 == null))
                {
                    this.mUIWordBoxEdit3 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit3.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit3.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit3;
            }
        }
        
        public WinEdit UIWordBoxEdit4
        {
            get
            {
                if ((this.mUIWordBoxEdit4 == null))
                {
                    this.mUIWordBoxEdit4 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit4.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit4.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit4;
            }
        }
        
        public WinEdit UIWordBoxEdit5
        {
            get
            {
                if ((this.mUIWordBoxEdit5 == null))
                {
                    this.mUIWordBoxEdit5 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit5.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit5.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit5;
            }
        }
        
        public WinEdit UIWordBoxEdit6
        {
            get
            {
                if ((this.mUIWordBoxEdit6 == null))
                {
                    this.mUIWordBoxEdit6 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit6.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit6.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit6;
            }
        }
        
        public WinEdit UIWordBoxEdit7
        {
            get
            {
                if ((this.mUIWordBoxEdit7 == null))
                {
                    this.mUIWordBoxEdit7 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit7.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit7.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit7;
            }
        }
        
        public WinEdit UIWordBoxEdit8
        {
            get
            {
                if ((this.mUIWordBoxEdit8 == null))
                {
                    this.mUIWordBoxEdit8 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit8.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit8.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit8;
            }
        }
        
        public WinEdit UIWordBoxEdit9
        {
            get
            {
                if ((this.mUIWordBoxEdit9 == null))
                {
                    this.mUIWordBoxEdit9 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit9.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit9.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit9;
            }
        }
        
        public WinEdit UIWordBoxEdit10
        {
            get
            {
                if ((this.mUIWordBoxEdit10 == null))
                {
                    this.mUIWordBoxEdit10 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit10.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit10.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit10;
            }
        }
        
        public WinEdit UIWordBoxEdit11
        {
            get
            {
                if ((this.mUIWordBoxEdit11 == null))
                {
                    this.mUIWordBoxEdit11 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit11.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit11.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit11;
            }
        }
        
        public WinEdit UIWordBoxEdit12
        {
            get
            {
                if ((this.mUIWordBoxEdit12 == null))
                {
                    this.mUIWordBoxEdit12 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit12.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit12.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit12;
            }
        }
        
        public WinEdit UIWordBoxEdit13
        {
            get
            {
                if ((this.mUIWordBoxEdit13 == null))
                {
                    this.mUIWordBoxEdit13 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit13.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit13.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit13;
            }
        }
        
        public WinEdit UIWordBoxEdit14
        {
            get
            {
                if ((this.mUIWordBoxEdit14 == null))
                {
                    this.mUIWordBoxEdit14 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit14.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit14.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit14;
            }
        }
        
        public WinEdit UIWordBoxEdit15
        {
            get
            {
                if ((this.mUIWordBoxEdit15 == null))
                {
                    this.mUIWordBoxEdit15 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit15.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit15.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit15;
            }
        }
        
        public WinEdit UIWordBoxEdit16
        {
            get
            {
                if ((this.mUIWordBoxEdit16 == null))
                {
                    this.mUIWordBoxEdit16 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit16.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit16.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit16;
            }
        }
        
        public WinEdit UIWordBoxEdit17
        {
            get
            {
                if ((this.mUIWordBoxEdit17 == null))
                {
                    this.mUIWordBoxEdit17 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit17.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit17.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit17;
            }
        }
        
        public WinEdit UIWordBoxEdit18
        {
            get
            {
                if ((this.mUIWordBoxEdit18 == null))
                {
                    this.mUIWordBoxEdit18 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit18.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit18.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit18;
            }
        }
        
        public WinEdit UIWordBoxEdit19
        {
            get
            {
                if ((this.mUIWordBoxEdit19 == null))
                {
                    this.mUIWordBoxEdit19 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit19.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit19.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit19;
            }
        }
        
        public WinEdit UIWordBoxEdit20
        {
            get
            {
                if ((this.mUIWordBoxEdit20 == null))
                {
                    this.mUIWordBoxEdit20 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit20.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit20.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit20;
            }
        }
        
        public WinEdit UIWordBoxEdit21
        {
            get
            {
                if ((this.mUIWordBoxEdit21 == null))
                {
                    this.mUIWordBoxEdit21 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit21.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit21.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit21;
            }
        }
        
        public WinEdit UIWordBoxEdit22
        {
            get
            {
                if ((this.mUIWordBoxEdit22 == null))
                {
                    this.mUIWordBoxEdit22 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit22.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit22.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit22;
            }
        }
        
        public WinEdit UIWordBoxEdit23
        {
            get
            {
                if ((this.mUIWordBoxEdit23 == null))
                {
                    this.mUIWordBoxEdit23 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit23.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit23.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit23;
            }
        }
        
        public WinEdit UIWordBoxEdit24
        {
            get
            {
                if ((this.mUIWordBoxEdit24 == null))
                {
                    this.mUIWordBoxEdit24 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWordBoxEdit24.SearchProperties[WinEdit.PropertyNames.Name] = "Y";
                    this.mUIWordBoxEdit24.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIWordBoxEdit24;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIWordBoxEdit;
        
        private WinEdit mUIWordBoxEdit1;
        
        private WinEdit mUIWordBoxEdit2;
        
        private WinEdit mUIWordBoxEdit3;
        
        private WinEdit mUIWordBoxEdit4;
        
        private WinEdit mUIWordBoxEdit5;
        
        private WinEdit mUIWordBoxEdit6;
        
        private WinEdit mUIWordBoxEdit7;
        
        private WinEdit mUIWordBoxEdit8;
        
        private WinEdit mUIWordBoxEdit9;
        
        private WinEdit mUIWordBoxEdit10;
        
        private WinEdit mUIWordBoxEdit11;
        
        private WinEdit mUIWordBoxEdit12;
        
        private WinEdit mUIWordBoxEdit13;
        
        private WinEdit mUIWordBoxEdit14;
        
        private WinEdit mUIWordBoxEdit15;
        
        private WinEdit mUIWordBoxEdit16;
        
        private WinEdit mUIWordBoxEdit17;
        
        private WinEdit mUIWordBoxEdit18;
        
        private WinEdit mUIWordBoxEdit19;
        
        private WinEdit mUIWordBoxEdit20;
        
        private WinEdit mUIWordBoxEdit21;
        
        private WinEdit mUIWordBoxEdit22;
        
        private WinEdit mUIWordBoxEdit23;
        
        private WinEdit mUIWordBoxEdit24;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIEnterWindow : WinWindow
    {
        
        public UIEnterWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "enterButton";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinButton UIEnterButton
        {
            get
            {
                if ((this.mUIEnterButton == null))
                {
                    this.mUIEnterButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEnterButton.SearchProperties[WinButton.PropertyNames.Name] = "Enter";
                    this.mUIEnterButton.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIEnterButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIEnterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIExitWindow : WinWindow
    {
        
        public UIExitWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "exitButton";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinButton UIExitButton
        {
            get
            {
                if ((this.mUIExitButton == null))
                {
                    this.mUIExitButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIExitButton.SearchProperties[WinButton.PropertyNames.Name] = "Exit";
                    this.mUIExitButton.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIExitButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIExitButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBoggleViewTitleBar : WinTitleBar
    {
        
        public UIBoggleViewTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITableLayoutPanel1Window : WinWindow
    {
        
        public UITableLayoutPanel1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tableLayoutPanel1";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinClient UITableLayoutPanel1Client
        {
            get
            {
                if ((this.mUITableLayoutPanel1Client == null))
                {
                    this.mUITableLayoutPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUITableLayoutPanel1Client.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUITableLayoutPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITableLayoutPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITimeBoxWindow : WinWindow
    {
        
        public UITimeBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "timeBox";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinEdit UITimeBoxEdit
        {
            get
            {
                if ((this.mUITimeBoxEdit == null))
                {
                    this.mUITimeBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITimeBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Player Score";
                    this.mUITimeBoxEdit.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUITimeBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITimeBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOpponentScoreBoxWindow : WinWindow
    {
        
        public UIOpponentScoreBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "opponentScoreBox";
            this.WindowTitles.Add("Boggle View");
            #endregion
        }
        
        #region Properties
        public WinEdit UIOpponentScoreBoxEdit
        {
            get
            {
                if ((this.mUIOpponentScoreBoxEdit == null))
                {
                    this.mUIOpponentScoreBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIOpponentScoreBoxEdit.WindowTitles.Add("Boggle View");
                    #endregion
                }
                return this.mUIOpponentScoreBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIOpponentScoreBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITelnetlocalhostWindow : WinWindow
    {
        
        public UITelnetlocalhostWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Telnet localhost";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ConsoleWindowClass";
            this.WindowTitles.Add("Telnet localhost");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UITelnetlocalhostTitleBar
        {
            get
            {
                if ((this.mUITelnetlocalhostTitleBar == null))
                {
                    this.mUITelnetlocalhostTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUITelnetlocalhostTitleBar.WindowTitles.Add("Telnet localhost");
                    #endregion
                }
                return this.mUITelnetlocalhostTitleBar;
            }
        }
        
        public WinClient UITelnetlocalhostClient
        {
            get
            {
                if ((this.mUITelnetlocalhostClient == null))
                {
                    this.mUITelnetlocalhostClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITelnetlocalhostClient.SearchProperties[WinControl.PropertyNames.Name] = "Telnet localhost";
                    this.mUITelnetlocalhostClient.WindowTitles.Add("Telnet localhost");
                    #endregion
                }
                return this.mUITelnetlocalhostClient;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUITelnetlocalhostTitleBar;
        
        private WinClient mUITelnetlocalhostClient;
        #endregion
    }
}
